services:
  backend:
    build:
      context: ./api
      args:
        API_PORT: ${API_PORT}
    container_name: api
    env_file:
      - .env    
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - chatbot_net
    depends_on:
      - redis 
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}

  chatbot:
    build:
      context: ./chatbot
      args:
        CHATBOT_PORT: ${CHATBOT_PORT}
    container_name: chatbot
    env_file:
      - .env
    ports:
      - ${CHATBOT_PORT}:${CHATBOT_PORT}   
    networks:
      - chatbot_net
    environment:
      - CHAINLIT_HOST=0.0.0.0
      - CHAINLIT_PORT=${CHATBOT_PORT}
      - API_HOST=api
      - API_PORT=${API_PORT}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}

  frontend:
    build:
      context: .
      args:
        UI_PORT: ${UI_PORT}
    container_name: ui
    env_file:
      - .env
    ports:
      - ${UI_PORT}:${UI_PORT}  
    environment:
      - API_HOST=api
      - API_PORT=${API_PORT}
      - CHATBOT_HOST=${CHATBOT_HOST}
      - CHATBOT_PORT=${CHATBOT_PORT}
      - UI_HOST=${UI_HOST:-0.0.0.0}
      - UI_PORT=${UI_PORT}
      - VUE_APP_CESIUM_TOKEN=${VUE_APP_CESIUM_TOKEN}
    networks:
      - chatbot_net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - chatbot_net
    volumes:
      - redis_data:/data
    command: redis-server --port ${REDIS_PORT} --appendonly yes

networks:
  chatbot_net:
    driver: bridge

volumes:
  redis_data: